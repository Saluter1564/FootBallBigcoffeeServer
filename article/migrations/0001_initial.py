# Generated by Django 2.0.3 on 2019-10-21 14:02

import DjangoUeditor.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='标题', max_length=50, verbose_name='标题')),
                ('pic', models.ImageField(help_text='广告图', upload_to='uploads', verbose_name='广告图')),
                ('adurl', models.URLField(help_text='地址', verbose_name='地址')),
                ('adlocation', models.CharField(help_text='位置', max_length=2, verbose_name='位置')),
                ('status', models.CharField(default=1, help_text='状态', max_length=1, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='名称', max_length=100, verbose_name='标题')),
                ('slug', models.SlugField(unique_for_year='publish_date', verbose_name='描述')),
                ('content', DjangoUeditor.models.UEditorField(blank=True, default='', verbose_name='内容')),
                ('status', models.CharField(help_text='状态', max_length=2, verbose_name='状态')),
                ('expiration_date', models.DateTimeField(blank=True, help_text='有效日期', null=True, verbose_name='有效日期')),
                ('is_active', models.BooleanField(default=True, help_text='是否热门', verbose_name='是否热门')),
                ('pic', models.ImageField(help_text='图片', upload_to='uploads', verbose_name='图片')),
                ('praise_num', models.IntegerField(default=0, help_text='点赞', verbose_name='点赞')),
                ('read_num', models.IntegerField(default=0, help_text='浏览数', verbose_name='浏览数')),
                ('fav_num', models.IntegerField(default=0, help_text='收藏数', verbose_name='收藏数')),
                ('author', models.ForeignKey(help_text='作者', on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '新闻文章',
                'verbose_name_plural': '新闻文章',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='大类', max_length=20, verbose_name='名称')),
            ],
            options={
                'verbose_name': '新闻类别',
                'verbose_name_plural': '新闻类别',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='名称', max_length=20, verbose_name='名称')),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, help_text='创建时间', verbose_name='创建时间')),
                ('completed', models.BooleanField(default=False, help_text='是否完成', verbose_name='是否完成')),
                ('categorys', models.ForeignKey(help_text='大类', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='article.Category')),
            ],
            options={
                'verbose_name': '新闻子栏目',
                'verbose_name_plural': '新闻子栏目',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='LeagueMatchVo',
            fields=[
                ('awayRank', models.CharField(help_text='客队排名', max_length=50, verbose_name='客队排名')),
                ('awayTeamId', models.IntegerField(help_text='客队ID', verbose_name='客队ID')),
                ('awayTeamLogo', models.CharField(help_text='客队LOGO', max_length=50, verbose_name='客队LOGO')),
                ('awayTeamName', models.CharField(help_text='客队名称', max_length=50, verbose_name='客队名称')),
                ('elapsedTime', models.CharField(help_text='比赛进行时间', max_length=50, verbose_name='比赛进行时间')),
                ('existGroupMatch', models.IntegerField(help_text='??', verbose_name='??')),
                ('homeRank', models.CharField(help_text='主队排名', max_length=50, verbose_name='主队排名')),
                ('homeTeamId', models.IntegerField(help_text='主队ID', verbose_name='主队ID')),
                ('homeTeamLogo', models.CharField(help_text='主队LOGO', max_length=50, verbose_name='主队LOGO')),
                ('homeTeamName', models.CharField(help_text='主队名称', max_length=50, verbose_name='主队名称')),
                ('leagueId', models.IntegerField(help_text='联赛ID', verbose_name='联赛ID')),
                ('leagueMatchId', models.IntegerField(help_text='比赛ID', primary_key=True, serialize=False, verbose_name='比赛ID')),
                ('leagueName', models.CharField(help_text='联赛名称', max_length=50, verbose_name='联赛名称')),
                ('leagueSeasonId', models.IntegerField(help_text='联赛季节ID', verbose_name='联赛季节ID')),
                ('leagueStageId', models.IntegerField(help_text='联赛阶段ID', verbose_name='联赛阶段ID')),
                ('leagueType', models.IntegerField(help_text='联赛类型', verbose_name='联赛类型')),
                ('matchStatus', models.IntegerField(help_text='比赛状态', verbose_name='比赛状态')),
                ('matchTime', models.CharField(help_text='比赛开始时间', max_length=50, verbose_name='比赛开始时间')),
                ('middle', models.BooleanField(help_text='是否中立场', verbose_name='是否中立场')),
                ('qtMatchId', models.IntegerField(blank=True, help_text='???', null=True, verbose_name='???')),
                ('score', models.CharField(blank=True, help_text='比分', max_length=50, null=True, verbose_name='比分')),
                ('seasonFlag', models.IntegerField(blank=True, help_text='联赛季节旗帜', null=True, verbose_name='联赛季节旗帜')),
            ],
        ),
        migrations.CreateModel(
            name='MatchList',
            fields=[
                ('aicaiAwayId', models.IntegerField(blank=True, help_text='爱彩客队ID', null=True, verbose_name='爱彩客队ID')),
                ('aicaiHomeId', models.IntegerField(blank=True, help_text='爱彩主队ID', null=True, verbose_name='爱彩主队ID')),
                ('aicaiLeagueId', models.IntegerField(blank=True, help_text='爱彩联赛ID', null=True, verbose_name='爱彩联赛ID')),
                ('awayId', models.IntegerField(help_text='客队ID', verbose_name='客队ID')),
                ('awayLogo', models.CharField(help_text='客队LOGO地址', max_length=500, verbose_name='客队LOGO地址')),
                ('awayName', models.CharField(help_text='客队名称', max_length=50, verbose_name='客队名称')),
                ('awayRank', models.CharField(help_text='客队排名', max_length=50, verbose_name='客队排名')),
                ('bigsmall', models.CharField(help_text='大小球盘口', max_length=50, verbose_name='大小球盘口')),
                ('card', models.CharField(help_text='红黄牌', max_length=50, verbose_name='红黄牌')),
                ('corner', models.CharField(blank=True, help_text='角球', max_length=50, null=True, verbose_name='角球')),
                ('elapsedTime', models.CharField(help_text='比赛进行时间', max_length=50, verbose_name='比赛进行时间')),
                ('homeId', models.IntegerField(help_text='主队ID', verbose_name='主队ID')),
                ('homeLogo', models.CharField(help_text='主队LOGO地址', max_length=500, verbose_name='主队LOGO地址')),
                ('homeName', models.CharField(help_text='主队名称', max_length=50, verbose_name='主队名称')),
                ('homeRank', models.CharField(help_text='主队排名', max_length=50, verbose_name='主队排名')),
                ('isCartoon', models.BooleanField(default=False, help_text='是否有动画直播', verbose_name='是否有动画直播')),
                ('isVideo', models.BooleanField(default=False, help_text='是否有视频直播', verbose_name='是否有视频直播')),
                ('leagueColor', models.CharField(help_text='联赛颜色', max_length=50, verbose_name='联赛颜色')),
                ('leagueId', models.IntegerField(help_text='联赛ID', verbose_name='联赛ID')),
                ('leagueName', models.CharField(help_text='联赛名称', max_length=50, verbose_name='联赛名称')),
                ('leagueType', models.IntegerField(help_text='联赛类型', verbose_name='联赛类型')),
                ('matchDate', models.DateTimeField(blank=True, help_text='比赛开始日期', max_length=50, verbose_name='比赛开始日期')),
                ('matchId', models.IntegerField(help_text='比赛ID', primary_key=True, serialize=False, verbose_name='比赛ID')),
                ('matchTime', models.CharField(help_text='比赛开始时间', max_length=50, verbose_name='比赛开始时间')),
                ('middle', models.BooleanField(default=False, help_text='是否中立场地', verbose_name='是否中立场地')),
                ('oddsAsia', models.CharField(help_text='亚盘赔率', max_length=50, verbose_name='亚盘赔率')),
                ('oddsEurope', models.CharField(help_text='欧盘赔率', max_length=50, verbose_name='欧盘赔率')),
                ('qtMatchId', models.IntegerField(help_text='qt比赛ID', verbose_name='qt比赛ID')),
                ('score', models.CharField(help_text='比分数据', max_length=50, verbose_name='比分数据')),
                ('status', models.IntegerField(help_text='比赛进行状态', verbose_name='比赛进行状态')),
            ],
        ),
        migrations.CreateModel(
            name='MatchStanding',
            fields=[
                ('attackToScoreRate', models.FloatField(help_text='赛果', max_length=200, verbose_name='进球转化率')),
                ('averageLost', models.FloatField(help_text='？？', max_length=200, verbose_name='？？')),
                ('averageScore', models.FloatField(help_text='？？', max_length=200, verbose_name='？？')),
                ('beCornerKick', models.FloatField(help_text='被罚角球', max_length=200, verbose_name='被罚角球')),
                ('beFreeKick', models.FloatField(help_text='被罚任意球', max_length=200, verbose_name='被罚任意球')),
                ('beShootOn', models.FloatField(help_text='被射正', max_length=200, verbose_name='被射正')),
                ('beShooted', models.FloatField(help_text='被射门', max_length=200, verbose_name='被射门')),
                ('control', models.FloatField(help_text='控球比例', max_length=200, verbose_name='控球比例')),
                ('cornerKick', models.FloatField(help_text='角球', max_length=200, verbose_name='角球')),
                ('dangerousAttack', models.FloatField(help_text='危险进攻次数', max_length=200, verbose_name='危险进攻次数')),
                ('freeKick', models.FloatField(help_text='任意球次数', max_length=200, verbose_name='任意球次数')),
                ('halfControlRate', models.FloatField(help_text='半场控球比例', max_length=200, verbose_name='半场控球比例')),
                ('lostScoreRate', models.FloatField(help_text='失分比例', max_length=200, verbose_name='失分比例')),
                ('shoot', models.FloatField(help_text='射门次数', max_length=200, verbose_name='射门次数')),
                ('shootOn', models.FloatField(help_text='射正次数', max_length=200, verbose_name='射正次数')),
                ('leagueMatchId', models.IntegerField(help_text='比赛ID', primary_key=True, serialize=False, verbose_name='比赛ID')),
                ('homeId', models.IntegerField(blank=True, help_text='主队ID', null=True, verbose_name='主队ID')),
                ('homeLogo', models.CharField(blank=True, help_text='主队LOGO地址', max_length=250, null=True, verbose_name='主队LOGO地址')),
                ('homeName', models.CharField(blank=True, help_text='主队名称', max_length=50, null=True, verbose_name='主队名称')),
                ('awayId', models.IntegerField(blank=True, help_text='客队ID', null=True, verbose_name='客队ID')),
                ('awayLogo', models.CharField(blank=True, help_text='客队LOGO地址', max_length=250, null=True, verbose_name='客队LOGO地址')),
                ('awayName', models.CharField(blank=True, help_text='客队名称', max_length=50, null=True, verbose_name='客队名称')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='名称', max_length=50, verbose_name='名称')),
                ('slug', models.SlugField(verbose_name='描述')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TeamBoutExploits',
            fields=[
                ('amidithion', models.CharField(help_text='赛果', max_length=50, verbose_name='赛果')),
                ('asiaHanciap', models.CharField(help_text='亚盘盘口', max_length=50, verbose_name='亚盘盘口')),
                ('asiaResult', models.CharField(help_text='亚盘结果', max_length=50, verbose_name='亚盘结果')),
                ('awayName', models.CharField(help_text='客队名称', max_length=50, verbose_name='客队名称')),
                ('awayTeamId', models.IntegerField(help_text='客队ID', verbose_name='客队ID')),
                ('awayTeamLogo', models.CharField(help_text='客队LOGO', max_length=50, verbose_name='客队LOGO')),
                ('bigSamllResult', models.CharField(help_text='大小球结果', max_length=50, verbose_name='大小球结果')),
                ('bigSmallHanciap', models.CharField(help_text='大小球盘口', max_length=50, verbose_name='大小球盘口')),
                ('fullResult', models.CharField(help_text='全场比分结果', max_length=50, verbose_name='全场比分结果')),
                ('halfResult', models.CharField(help_text='半场比分结果', max_length=50, verbose_name='半场比分结果')),
                ('homeName', models.CharField(help_text='主队名称', max_length=50, verbose_name='主队名称')),
                ('homeTeamId', models.IntegerField(help_text='主队ID', verbose_name='主队ID')),
                ('homeTeamLogo', models.CharField(help_text='主队LOGO', max_length=50, verbose_name='主队LOGO')),
                ('leagueId', models.IntegerField(help_text='联赛ID', verbose_name='联赛ID')),
                ('leagueName', models.CharField(help_text='联赛名称', max_length=50, verbose_name='联赛名称')),
                ('matchId', models.IntegerField(help_text='比赛ID', primary_key=True, serialize=False, verbose_name='比赛ID')),
                ('matchTime', models.CharField(help_text='比赛日期', max_length=50, verbose_name='比赛日期')),
                ('middle', models.BooleanField(default=False, help_text='是否中立场', verbose_name='是否中立场')),
                ('qiutanMatchId', models.IntegerField(help_text='球探网比赛ID', verbose_name='球探网比赛ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserFav',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('articles', models.ForeignKey(help_text='文章id', on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='article.Article', verbose_name='文章')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户收藏',
                'verbose_name_plural': '用户收藏',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='item',
            field=models.ForeignKey(help_text='类别名称', on_delete=django.db.models.deletion.CASCADE, related_name='item', to='article.Item', verbose_name='类别名称'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='标签', related_name='tags', to='article.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='userfav',
            unique_together={('user', 'articles')},
        ),
    ]
